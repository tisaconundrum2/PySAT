language: generic

env:
  - PYTHON_VERSION=3.5
  - PYTHON_VERSION=3.6
os:
  - linux
  - osx

branches:
only:
  - dev
  - master

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      curl -o miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi

  # More conda setup to get miniconda in and a virtual env. setup
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a   # Useful for debugging any issues with conda
  # Create the env
  - conda create -q -n test python=$PYTHON_VERSION
  - source activate test

install:
  # Install dependencies
  - conda config --add channels usgs-astrogeology
  - conda config --add channels conda-forge
  - conda install -c conda-forge numpy scipy pandas gdal scikit-learn
  - conda install -c usgs-astrogeology plio

  # Development installation
  - conda install pytest pytest-cov
  - pip install coveralls

script:
  - python setup.py install
#  - pytest --cov=libpysat

after_success:
#  - coveralls
  - source deactivate
#  - conda install conda-build anaconda-client
#  - conda config --set anaconda_upload yes
#  - conda build --token $CONDA_UPLOAD_TOKEN --python $PYTHON_VERSION .
deploy:
  provider: pypi
  user: tisaconundrum
  password: $PYPI_PASSWORD
  distributions: sdist bdist_wheel
  on:
    branch: master
